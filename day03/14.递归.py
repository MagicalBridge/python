# Author:Louis Chu
#  递归的总结:
#  1.必须有一个明确的结果:
#  2.每一次进入更深层次的递归时候,问题的规模相比上一次都应该减少
#  3.递归的效率不高,递归层次过多导致栈溢出(在计算机中,函数调用是通过
#    stuck这种数据结构实现的,每当进入一个函数的调用栈机会增加一层帧
#    每当函数返回 栈就会减少一层帧 由于栈的大小不是无限的所以递归调用的次数过多会导致栈溢出


def calc(n):
    print(n)
    if int(n / 2) > 0:
        return calc(int(n / 2))
    print("->", n)
calc(10)


# 10
# 5
# 2
# 1
# -> 1
